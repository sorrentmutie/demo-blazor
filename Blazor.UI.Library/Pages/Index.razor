@page "/"

@inject IJSRuntime jsRuntime    


<PageTitle>Index</PageTitle>

<h1>Hello, world!</h1>

<MyFirstComponent>
    <h3>Ci scrivo qualcosa</h3>
</MyFirstComponent>

<MyFirstComponent>
    <HeaderChildContent>
        <p>Un paragrafo</p>
    </HeaderChildContent>
    <ChildContent>
        <p>Un altro paragrafo</p>
    </ChildContent>
</MyFirstComponent>

<MyModal Id="myM" Title="La mia bellissima modale" OnSave="Save">
    <ChildContent>
        <p>Contenuto della modale</p>
        <p>Seconda riga</p>
    </ChildContent>

</MyModal>


<button @onclick="() =>EseguiCalcolo()">Click me</button>
<button @onclick="() =>ShowModal()">Show Modal</button>

@area

@code {
    private InteropMatematico? interopMatematico;
    private double area = 0;
    protected override void OnInitialized()
    {
        interopMatematico = new InteropMatematico(jsRuntime);
    }

    private async Task Save()
    {
        await jsRuntime.InvokeVoidAsync("nascondiModale");
    }

    private async Task ShowModal()
    {
        await jsRuntime.InvokeVoidAsync("mostraModale", "myM");
    }

    private async Task EseguiCalcolo()
    {
        if(interopMatematico is not null)
        {
             //area = await interopMatematico.CalcolaAreaCerchio(10);
             // await interopMatematico.Somma(10, 20);
             await interopMatematico.Saluta("Mario");
        }
        
    }

    [JSInvokable]
    public static int Somma(int a, int b)
    {
        return a + b;
    }

}